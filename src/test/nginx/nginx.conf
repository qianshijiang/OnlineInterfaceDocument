user root;
worker_processes 2; #设置值和CPU核心数一致
error_log /usr/local/nginxinstall/logs/nginx_error.log crit; #日志位置和日志级别
pid /usr/local/nginxinstall/nginx.pid;
#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 65535;
events
{
  use epoll;
  worker_connections 65535;
}
http
{
  include mime.types;
  default_type application/octet-stream;
  log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
               '$status $body_bytes_sent "$http_referer" '
               '"$http_user_agent" $http_x_forwarded_for';
  
  charset utf-8;
     
  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 8m; #缓冲区代理缓冲用户端请求的最大字节数,可以理解为保存到本地再传给用户
     
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 60;
  tcp_nodelay on;
  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  gzip on; 
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types text/plain application/x-javascript text/css application/xml;
  gzip_vary on;
 
  #limit_zone crawler $binary_remote_addr 10m;
  
 #配置服务器
 #upstream answercode {
	#server 140.143.97.150:8888;
 #}
  
 #下面是server虚拟主机的配置
 server
  {
    listen 8889;#监听端口
    server_name 140.143.97.150; #140.143.97.150;#域名  www.answercodefruit.com
		
	# 匹配规则一 Wide-open CORS config for nginx
    location / {
		 if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			#
			# Custom headers and headers various browsers *should* be OK with but aren't
			#
			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			#
			# Tell client that this pre-flight info is valid for 20 days
			#
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain charset=UTF-8';
			add_header 'Content-Length' 0;
			return 204;
		 }
		 if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
		 }
        if ($request_method = 'GET') {
           add_header 'Access-Control-Allow-Origin' '*';
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
           add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
			client_body_buffer_size 128k;
			proxy_connect_timeout 600;
			proxy_read_timeout 600;
			proxy_send_timeout 600;
			proxy_buffer_size 64k;
			proxy_buffers   4 32k;
			proxy_busy_buffers_size 64k;
			proxy_temp_file_write_size 64k;

	        root /qrcode/qrcode/qrcodeweb/dist; #站点目录
	        index index.html index.htm index.php;
    }
	
	# 配置主页接口
	location ^~/Index/Indexpage {
	        root /qrcode/qrcode/qrcodeweb/dist; #站点目录
	        rewrite ^(.*)$ /index.html break;
			#index index.html index.htm index.php;
        }
	
	# 后端地址配置 二维码接口
    location ^~ /Qrcode {
	    # rewrite ^/Qrcode/(.*)$ /$1 break;
        proxy_pass http://localhost:8888; #把 /Qrcode 路径下的请求转发给真正的后端服务器
		proxy_read_timeout 600s;
		proxy_set_header  X-Real-IP  $remote_addr;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		index index;
    }
	
	# 访问静态资源
	location ^~ /static/ {  
        root /qrcode/qrcode/qrcodeweb/dist/;  
    }
	# 访问主页资源
	location ^~ /Index/static/ {
        root /qrcode/qrcode/qrcodeweb/dist/; 
    }
	
	# 访问二维码图片
	location ^~ /document/ {
	   alias /data/dispute_https/DMMR/QrCode/common/;
	}
    location ~ .*\.(php|php5)?$ {
      #fastcgi_pass unix:/tmp/php-cgi.sock;
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_index index.php;
      include fastcgi.conf;
    }
	
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$ {
      expires 30d;
      # access_log off;
    }
    location ~ .*\.(js|css)?$ {
      expires 15d;
      # access_log off;
    }
    access_log off;
  }
  # 如果不带www的域名要加301跳转，那也是和绑定域名一样，先绑定不带www的域名，只是不用写网站目录，而是进行301跳转
  #server {
  #  listen 8889;
  #  server_name answercodefruit.com;
  #  rewrite ^/(.*) http://www.answercode.com/$1 permanent;
  # }

}